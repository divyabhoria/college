DECLARE
    --variable declaration
 message varchar2(20):='hello world';
begin
    /*
*pl sql
*/
 dbms_output.put_line(message);
end;
/


--------------------------------------------------------------------------------------------------------------------------------------------


declare
 subtype name is char(20);
 subtype message is varchar2(100);
 salutation name;
 greetings message;
begin
 salutation:='reader';
 greetings:='welcome to the world of pl/sql';
 dbms_output.put_line('hello '||salutation || greetings);
end;
/

__________________________________________________________________________________________


DECLARE 
 a integer := 10; 
 b integer := 20; 
BEGIN 
 dbms_output.put_line('Value of a: ' || a); 
 dbms_output.put_line('Value of b: ' || b); 
 DECLARE 
  c integer := 1; 
  d integer := 2; 
 BEGIN 
  dbms_output.put_line('Value of a: ' || c); 
  dbms_output.put_line('Value of b: ' || d); 
 END; 
END; 
/ 


__________________________________________________________________________________________



create table customers(
     id int not null,
     name varchar(20) not null,
     age int not null,
     address char(25),
     salary decimal(18,2),
     primary key(id)
 );
insert into customers(id,name,age,address,salary) values(1,"ramesh",30,"h.no-1306",20);
insert into customers(id,name,age,address,salary) values(2,"krishna",40,"h.no-1307",30);
insert into customers(id,name,age,address,salary) values(3,"divya",50,"h.no-1308",40);
insert into customers(id,name,age,address,salary) values(4,"yashita",60,"h.no-1309",50);
insert into customers(id,name,age,address,salary) values(5,"raghav",70,"h.no-1310",60);

declare
 c_id customers.id%type:=1;
 c_name customers.name%type;
 c_addr customers.address%type;
 c_sal customers.salary%type;
begin
 select name,address,salary into c_name,c_addr,c_sal from customers where id=c_id;
 dbms_output.put_line
 ("customer"||c_name||'from'||c_addr||'earns'||c_sal);
end;



-----------------------------------------------------------------------------------------------



PI CONSTANT NUMBER := 3.141592654; 
DECLARE 
   -- constant declaration 
   pi constant number := 3.141592654; 
   -- other declarations 
   radius number(5,2);  
   dia number(5,2);  
   circumference number(7, 2); 
   area number (10, 2); 
BEGIN  
   -- processing 
   radius := 9.5;  
   dia := radius * 2;  
   circumference := 2.0 * pi * radius; 
   area := pi * radius * radius; 
   -- output 
   dbms_output.put_line('Radius: ' || radius); 
   dbms_output.put_line('Diameter: ' || dia); 
   dbms_output.put_line('Circumference: ' || circumference); 
   dbms_output.put_line('Area: ' || area); 
END; 
/


------------------------------------------------------------------------------------------


DECLARE 
   message  varchar2(30):= 'hi divya here'; 
BEGIN 
   dbms_output.put_line(message); 
END; 
/  



-------------------------------------------------------------------------------------


DECLARE 
   i number(1); 
   j number(1); 
BEGIN 
   << outer_loop >> 
   FOR i IN 1..3 LOOP 
      << inner_loop >> 
      FOR j IN 1..3 LOOP 
         dbms_output.put_line('i is: '|| i || ' and j is: ' || j); 
      END loop inner_loop; 
   END loop outer_loop; 
END; 

---------------------------------------------------------------------------------------


declare
 name varchar2(20);
 company varchar2(20);
 introduction clob;
 choice char(1);
begin 
 name := 'divya bhoria'; 
   company := 'google'; 
   introduction := ' Hello! I''m divya bhoria from google.'; 
   choice := 'y'; 
   IF choice = 'y' THEN 
      dbms_output.put_line(name); 
      dbms_output.put_line(company); 
      dbms_output.put_line(introduction); 
   END IF; 
end;


---------------------------------------------------------------------------------------


DECLARE 
   greetings varchar2(11) := 'hello world'; 
BEGIN 
   dbms_output.put_line(UPPER(greetings)); 
    
   dbms_output.put_line(LOWER(greetings)); 
    
   dbms_output.put_line(INITCAP(greetings)); 
    
   /* retrieve the first character in the string */ 
   dbms_output.put_line ( SUBSTR (greetings, 1, 1)); 
    
   /* retrieve the last character in the string */ 
   dbms_output.put_line ( SUBSTR (greetings, -1, 1)); 
    
   /* retrieve five characters,  
      starting from the seventh position. */ 
   dbms_output.put_line ( SUBSTR (greetings, 7, 5)); 
    
   /* retrieve the remainder of the string, 
      starting from the second position. */ 
   dbms_output.put_line ( SUBSTR (greetings, 2)); 
     
   /* find the location of the first "e" */ 
   dbms_output.put_line ( INSTR (greetings, 'e')); 
END; 
/ 


----------------------------------------------------------------------------------------


DECLARE 
   greetings varchar2(30) := '......Hello World.....'; 
BEGIN 
   dbms_output.put_line(RTRIM(greetings,'.')); 
   dbms_output.put_line(LTRIM(greetings, '.')); 
   dbms_output.put_line(TRIM( '.' from greetings)); 
END; 
/

---------------------------------------------------------------------------------------


DECLARE 
   type namesarray IS VARRAY(5) OF VARCHAR2(10); 
   type grades IS VARRAY(5) OF INTEGER; 
   names namesarray; 
   marks grades; 
   total integer; 
BEGIN 
   names := namesarray('Kavita', 'Pritam', 'Ayan', 'Rishav', 'Aziz'); 
   marks:= grades(98, 97, 78, 87, 92); 
   total := names.count; 
   dbms_output.put_line('Total '|| total || ' Students'); 
   FOR i in 1 .. total LOOP 
      dbms_output.put_line('Student: ' || names(i) || ' 
      Marks: ' || marks(i)); 
   END LOOP; 
END; 
/

--------------------------------------------------------------------------------------


create or replace procedure greetings
as
begin 
   dbms_output.put_line('helllo world');
end;

-------------------------------------------------------------------------------------


BEGIN 
   greetings; 
END; 
/
DROP PROCEDURE procedure-name; 
DROP PROCEDURE greetings; 
